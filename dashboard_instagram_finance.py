# -*- coding: utf-8 -*-
"""dashboard_instagram_finance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_gkO_cpRRry-DC2enrSx0LHKjSF8vFb0
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# ===============================
# 1Ô∏è‚É£ Data Preparation
# ===============================
st.set_page_config(page_title="Instagram Finance Dashboard", layout="wide")

st.title("üìä Dashboard Analisis Konten Instagram (Edukasi Keuangan)")
st.markdown("Simulasi data engagement untuk akun edukasi finansial. Dataset hasil generasi otomatis menggunakan Python Faker.")

# Load dataset
df = pd.read_csv('fake_instagram_finance_id_fixed.csv')
df['date'] = pd.to_datetime(df['date'])
df['hour'] = df['date'].dt.hour
df['engagement_rate'] = df['likes'] + df['comments'] + df['saves']

# ===============================
# 2Ô∏è‚É£ Sidebar Filter
# ===============================
st.sidebar.header("üîç Filter Data")
topics = st.sidebar.multiselect("Pilih Topik:", options=df['topic'].unique(), default=df['topic'].unique())
post_types = st.sidebar.multiselect("Pilih Jenis Konten:", options=df['post_type'].unique(), default=df['post_type'].unique())

filtered_df = df[(df['topic'].isin(topics)) & (df['post_type'].isin(post_types))]

st.sidebar.markdown("---")
st.sidebar.write(f"Total postingan terpilih: **{len(filtered_df)}**")

# ===============================
# 3Ô∏è‚É£ Statistik Utama
# ===============================
col1, col2, col3 = st.columns(3)
col1.metric("Rata-rata Likes ‚ù§Ô∏è", f"{filtered_df['likes'].mean():,.0f}")
col2.metric("Rata-rata Komentar üí¨", f"{filtered_df['comments'].mean():,.0f}")
col3.metric("Rata-rata Engagement üìà", f"{filtered_df['engagement_rate'].mean():,.0f}")

st.markdown("---")

# ===============================
# 4Ô∏è‚É£ Grafik Engagement per Topik
# ===============================
topic_stats = (
    filtered_df.groupby('topic')['engagement_rate']
    .mean()
    .sort_values(ascending=False)
)

fig1, ax1 = plt.subplots(figsize=(7,4))
topic_stats.plot(kind='bar', ax=ax1)
ax1.set_title('Rata-rata Engagement per Topik')
ax1.set_ylabel('Engagement Rate')
ax1.grid(axis='y', linestyle='--', alpha=0.6)
st.pyplot(fig1)

# ===============================
# 5Ô∏è‚É£ Grafik Engagement per Jenis Konten
# ===============================
post_type_stats = (
    filtered_df.groupby('post_type')['engagement_rate']
    .mean()
    .sort_values(ascending=False)
)

fig2, ax2 = plt.subplots(figsize=(6,4))
post_type_stats.plot(kind='bar', color='skyblue', ax=ax2)
ax2.set_title('Rata-rata Engagement per Jenis Konten')
ax2.set_ylabel('Engagement Rate')
ax2.grid(axis='y', linestyle='--', alpha=0.6)
st.pyplot(fig2)

# ===============================
# 6Ô∏è‚É£ Grafik Engagement Berdasarkan Jam Posting
# ===============================
hourly_stats = (
    filtered_df.groupby('hour')['engagement_rate']
    .mean()
    .reset_index()
)

fig3, ax3 = plt.subplots(figsize=(10,4))
ax3.plot(hourly_stats['hour'], hourly_stats['engagement_rate'], marker='o')
ax3.set_title('Rata-rata Engagement Berdasarkan Jam Posting')
ax3.set_xlabel('Jam (0‚Äì23)')
ax3.set_ylabel('Rata-rata Engagement')
ax3.grid(True, linestyle='--', alpha=0.6)
st.pyplot(fig3)

# ===============================
# 7Ô∏è‚É£ Top 5 Caption dengan Engagement Tertinggi
# ===============================
st.markdown("### üèÜ Top 5 Caption dengan Engagement Tertinggi")
top_posts = filtered_df.sort_values('engagement_rate', ascending=False).head(5)[['caption', 'topic', 'post_type', 'engagement_rate']]
st.dataframe(top_posts.style.format({'engagement_rate': '{:,.0f}'}))